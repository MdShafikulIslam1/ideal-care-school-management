// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @unique
  password           String
  role               User_Role @default(STUDENT)
  isPasswordChange   Boolean   @default(false)
  passwordChangeDate DateTime?
  studentId          String?   @unique
  student            Student?  @relation(fields: [studentId], references: [id])
  adminId            String?   @unique
  admin              Admin?    @relation(fields: [adminId], references: [id])
  teacherId          String?   @unique
  teacher            Teacher?  @relation(fields: [teacherId], references: [id])
  guardianId         String?   @unique
  guardian           Guardian? @relation(fields: [guardianId], references: [phoneNumber])
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("user")
}

model Student {
  id                     String              @id @unique
  firstName              String
  lastName               String
  contactNo              String
  gender                 Gender
  emergencyContactNo     String
  classRole              Int?
  fatherName             String
  fatherContactNo        String
  fatherOccupation       String
  motherName             String
  motherContactNo        String
  motherOccupation       String
  presentAddress         String
  permanentAddress       String
  dateOfBirth            String
  bloodGroup             String
  profileImage           String?
  localGuardianName      String
  localGuardianContactNo String
  isActive               Boolean             @default(true)
  department             Department?         @default(SCIENCE)
  residentialCategory    ResidentialCategory @default(NON_RESIDENT)
  classId                String
  class                  Class               @relation(fields: [classId], references: [id])
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @updatedAt
  user                   User?
  guardians              Guardian[]

  @@map("student")
}

model Class {
  id              String     @id @default(uuid())
  title           Class_Name @unique @default(PLAY)
  maxCapacity     Int        @default(30)
  admittedStudent Int        @default(0)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  students        Student[]
  teachers        Teacher[]

  @@map("class")
}

model Admin {
  id                     String               @id @unique
  firstName              String
  lastName               String
  gender                 Gender
  contactNo              String
  emergencyContactNo     String
  presentAddress         String
  permanentAddress       String
  dateOfBirth            String
  bloodGroup             String
  profileImage           String?
  isActive               Boolean              @default(true)
  managementDepartmentId String
  managementDepartment   ManagementDepartment @relation(fields: [managementDepartmentId], references: [id])
  designation            String
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt
  user                   User?

  @@map("admin")
}

model ManagementDepartment {
  id        String   @id @default(uuid())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admins    Admin[]

  @@map("management_department")
}

model Teacher {
  id                       String   @id @unique
  firstName                String
  lastName                 String
  gender                   Gender
  contactNo                String
  emergencyContactNo       String
  presentAddress           String
  permanentAddress         String
  dateOfBirth              String
  bloodGroup               String
  profileImage             String?
  isActive                 Boolean  @default(true)
  educationalQualification String
  classTeacherId           String
  class                    Class    @relation(fields: [classTeacherId], references: [id])
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  user                     User?

  @@map("teacher")
}

model Guardian {
  id            String           @id @default(uuid())
  phoneNumber   String           @unique
  password      String
  profileImage  String?
  relation      GuardianRelation @default(FATHER)
  childId       String
  child         Student          @relation(fields: [childId], references: [id])
  childPassword String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  user          User?

  @@map("guardian")
}

enum Department {
  SCIENCE
  COMMERCE
  HUMANITIES
}

enum ResidentialCategory {
  RESIDENT
  NON_RESIDENT
}

enum User_Role {
  STUDENT
  TEACHER
  ADMIN
  GUARDIAN
}

enum Class_Name {
  PLAY
  NURSERY
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
}

enum Gender {
  MALE
  FEMALE
  OTHERS
}

enum GuardianRelation {
  FATHER
  MOTHER
  LOCALGUARDIAN
}
